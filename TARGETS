# @autodeps

load("@fbcode_macros//build_defs:python_binary.bzl", "python_binary")
load("@fbcode_macros//build_defs:python_library.bzl", "python_library")

python_library(
    name = "lib",
    srcs = glob(
        [
            "**/*.py",
        ],
        exclude = [
            "baselines/**/*.py",
            "evaluation/**/*.py",
            "third_party/**/*",
        ],
    ),
    resources = glob(["conf/**/*.yaml"]),
    deps = [
        "fbsource//third-party/pypi/imageio:imageio",
        "fbsource//third-party/pypi/numpy:numpy",
        "fbsource//third-party/pypi/scipy:scipy",
        "//caffe2:torch",
        "//fair_infra/data/iopath/iopath:core",
        "//fblearner/flow/facebook:fbpackage",
        "//github/facebookresearch/hydra:hydra",
        "//github/third-party/PyTorchLightning/pytorch-lightning:lib",
        "//python/wheel/kornia:kornia",
        "//python/wheel/moviepy:moviepy",  # @manual
        "//python/wheel/pillow:pillow",
        "//pytorch/elastic/torchelastic/distributed:api",
        "//pytorch/torch-scatter:torch-scatter",  # @manual
        "//pytorch/vision:torchvision",
        "//stl/lightning/callbacks:model_checkpoint",
        "//stl/lightning/io:filesystem",
        "//stl/lightning/loggers:all_loggers",
        "//stl/lightning/utilities:checkpoint",
        "//x3d/lib/python:hydra_utils",
        "//x3d/slf/third_party/intersect:lib",  # @manual
    ],
    external_deps = [
        ("opencv3", None, "opencv3-py"),
    ],
)

python_binary(
    name = "cli",
    main_module = "x3d.slf.train",
    par_style = "xar",
    deps = [
        ":lib",
    ],
)
